export type language = "en" | "de";

export enum textId {
  "sources",
  "unknown_source",
  "author",
  "title",
  "creation_date",
  "last_access",
  "link",
  "export_pdf",
  "download_pdf",
  "start_new_session",
  "stop_session",
  "add_source",
  "delete_source",
  "use_source",
  "last_accessed_at",
  "find",
  "replace",
  "replace_all",
  "find_and_replace",
  "not_found",
  "show_help",
  "rename_file",
  "open_local_file",
  "download_file",
  "print",
  "switch_code_render",
  "toggle_display_render",
  "zoom_in",
  "zoom_out",
  "shortcut",
  "description",
  "set_language",
  "untitled",
  "unknown",
  "table_of_contents",
  "guest_user",
  "line",
  "column",
  "selected",
  "words",
}

const localStringMap: { [key in language]: { [key in textId]: string } } = {
  de: [
    "Quellen",
    "Unbekannte Quelle",
    "Autor",
    "Titel",
    "Erstellungsdatum",
    "Letzter Zugriff",
    "Link",
    "PDF exportieren",
    "PDF herunterladen",
    "Sitzung starten",
    "Sitzung beenden",
    "Quelle hinzufügen",
    "Quelle löschen",
    "Quelle verlinken",
    "Zuletzt zugegriffen am",
    "Suchen",
    "Ersetzen",
    "Alle ersetzen",
    "Suchen und ersetzen",
    "Nicht gefunden",
    "Hilfe anzeigen",
    "Datei umbenennen",
    "Lokale Datei öffnen",
    "Datei herunterladen",
    "Drucken",
    "Wechsle zwischen Code- und Anzeigemodus",
    "Schalte Anzeigemodus neben Codeanzeige an oder aus",
    "Anzeige vergrößern",
    "Anzeige verkleinern",
    "Tastenkürzel",
    "Beschreibung",
    "Sprache ändern",
    "Unbenannt",
    "unbekannt",
    "Inhaltsverzeichnis",
    "Gastbenutzer",
    "Zeile",
    "Spalte",
    "Ausgewählt",
    "Wörter",
  ],
  en: [
    "Sources",
    "Unknown source",
    "Author",
    "Title",
    "Creation date",
    "Last access",
    "Link",
    "Export to PDF",
    "Download PDF",
    "Start a session",
    "Stop session",
    "Add source",
    "Delete source",
    "Use source",
    "Last accessed at",
    "Find",
    "Replace",
    "Replace all",
    "Find and replace",
    "Not found",
    "Show help",
    "Rename file",
    "Open local file",
    "Download file",
    "Print",
    "Switch between code and display mode",
    "Toggle display mode beside code on or off",
    "Zoom in",
    "Zoom out",
    "Shortcut",
    "Description",
    "Set language",
    "Untitled",
    "unknown",
    "Table of contents",
    "Guest user",
    "Line",
    "Column",
    "Selected",
    "Words",
  ],
};

let currentLanguage: language = navigator.language.includes("de") ? "de" : "en";

export const getLocale = (): language => currentLanguage;

export const setLocale = (language: language): void => {
  if (language in localStringMap) {
    currentLanguage = language;
  } else {
    console.error(`Language ${language} not supported`);
  }
};

export const getText = (id: textId) => localStringMap[currentLanguage][id];
